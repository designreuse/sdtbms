package com.bus.util;

import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;

import com.bus.dto.Account;
import com.bus.dto.Employee;
import com.bus.dto.score.Scoremember;
import com.bus.dto.score.Scorerecord;
import com.bus.dto.score.ScorerecordRemark;
import com.bus.dto.score.Scoretype;
import com.bus.services.HRBean;
import com.bus.services.ScoreBean;

public class ExcelScoreUpload extends ExcelFile{

	/**
	 * 添加打分记录07版本以上的excel文件用
	 * @param hrBean
	 * @param scoreBean
	 * @param user
	 * @throws Exception
	 */
	public void saveScore2007(HRBean hrBean, ScoreBean scoreBean, Account user) throws Exception{
		XSSFSheet sheet  = wb07.getSheetAt(0);
		Iterator<Row> rows = sheet.rowIterator();
		saveNormalScore(hrBean,scoreBean,user,rows);
	}

	/**
	 * 添加打分记录03版本的excel文件用
	 * @param hrBean
	 * @param scoreBean
	 * @param user
	 * @throws Exception
	 */
	public void saveScore2003(HRBean hrBean, ScoreBean scoreBean, Account user) throws Exception{
		HSSFSheet sheet = wb03.getSheetAt(0);
		Iterator<Row> rows = sheet.rowIterator();
		saveNormalScore(hrBean,scoreBean,user,rows);
	}

	/**
	 * 添加驾驶员打分记录Excel2003用
	 * @param hrBean
	 * @param scoreBean
	 * @param user
	 */
	public void saveDriverScore2003(HRBean hrBean, ScoreBean scoreBean,
			Account user) throws Exception{
		HSSFSheet sheet = wb03.getSheetAt(0);
		Iterator<Row> rows = sheet.rowIterator();
		saveDriverScore(hrBean,scoreBean,user,rows);
	}

	/**
	 * 添加驾驶员打分记录Excel2007用
	 * @param hrBean
	 * @param scoreBean
	 * @param user
	 */
	public void saveDriverScore2007(HRBean hrBean, ScoreBean scoreBean,
			Account user) throws Exception{
		XSSFSheet sheet  = wb07.getSheetAt(0);
		Iterator<Row> rows = sheet.rowIterator();
		saveDriverScore(hrBean,scoreBean,user,rows);
	}

	/**
	 * 添加普通的打分纪录
	 * @param hrBean
	 * @param scoreBean
	 * @param user
	 * @param rows
	 * @throws Exception
	 */
	private void saveNormalScore(HRBean hrBean, ScoreBean scoreBean,
			Account user, Iterator<Row> rows) throws Exception{
		List<Scorerecord> records = new ArrayList<Scorerecord>();
		while(rows.hasNext()){
			Row row = rows.next();
			if(row.getCell(0) == null)
				continue;
			row.getCell(0).setCellType(Cell.CELL_TYPE_STRING);
			String firstCell = row.getCell(0).toString();
			if(firstCell.equals("序号"))
				continue;
			if(!HRUtil.isInteger(firstCell))
				continue;
			
			Scorerecord sr = new Scorerecord();
			//打分日期
			if(isExcelDate(row.getCell(1))){
				sr.setScoredate(row.getCell(1).getDateCellValue());
			}else{
				System.out.println("序号"+row.getCell(0).toString()+" 的日期格式不正确，使用今天日期代替");
				sr.setScoredate(new Date());
			}
			//编号
			Scoretype st = new Scoretype();
			st.setReference(row.getCell(2).getStringCellValue().trim());
			sr.setScoretype(st);
			//打分人
			row.getCell(4).setCellType(Cell.CELL_TYPE_STRING);
			Scoremember sm = new Scoremember();
			Employee sender = new Employee();
			sender.setWorkerid(row.getCell(4).getStringCellValue().trim());
			sm.setEmployee(sender);
			sr.setSender(sm);
			//受分人
			row.getCell(6).setCellType(Cell.CELL_TYPE_STRING);
			Scoremember smR = new Scoremember();
			Employee receiver = new Employee();
			receiver.setWorkerid(row.getCell(6).getStringCellValue().trim());
			smR.setEmployee(receiver);
			sr.setReceiver(smR);
			//设置分值
			if(row.getCell(7)!= null && !row.getCell(7).toString().trim().equals("")){
				Double score = row.getCell(7).getNumericCellValue();
				sr.setScore(score.floatValue());
			}
			//设置创建日期
			sr.setCreatedate(new Date());
			//设置创建者
			sr.setCreator(user);
			records.add(sr);
		}
		scoreBean.saveMassScoresFromList(records,user,hrBean);
	}
	
	/**
	 * 保存驾驶员的打分纪录
	 * @param hrBean
	 * @param scoreBean
	 * @param user
	 * @param rows
	 * @throws Exception
	 */
	private void saveDriverScore(HRBean hrBean, ScoreBean scoreBean,
			Account user, Iterator<Row> rows) throws Exception{
		List<Scorerecord> records = new ArrayList<Scorerecord>();
		while(rows.hasNext()){
			Row row = rows.next();
			//如果第一个Cell不是整数序号，直接跳过
			if(row.getCell(0) == null)
				continue;
			row.getCell(0).setCellType(Cell.CELL_TYPE_STRING);
			String firstCell = row.getCell(0).toString();
			if(firstCell.equals("序号"))
				continue;
			if(!HRUtil.isInteger(firstCell))
				continue;
			
			Scorerecord sr = new Scorerecord();
			//打分日期,选最后的日期
			String date = row.getCell(3).getStringCellValue();
			String dateSplit[] = date.split("/",-1);
			Date scoreDate = HRUtil.parseDate(dateSplit[dateSplit.length-1],"yyyyMMdd-hh:mm");
			sr.setScoredate(scoreDate);
			
			//编号
			String ref = row.getCell(12).getStringCellValue();
			Scoretype st = new Scoretype();
			st.setReference(ref);
			sr.setScoretype(st);
			
			//打分人
			Scoremember sm = new Scoremember();
			Employee sender = new Employee();
			sender.setWorkerid(user.getEmployee());
			sm.setEmployee(sender);
			sr.setSender(sm);
			
			//受分人
			row.getCell(8).setCellType(Cell.CELL_TYPE_STRING);
			Scoremember smR = new Scoremember();
			Employee receiver = new Employee();
			receiver.setWorkerid(row.getCell(8).getStringCellValue().trim());
			smR.setEmployee(receiver);
			sr.setReceiver(smR);
			
			//设置分值
			if(row.getCell(14)!= null && !row.getCell(14).toString().trim().equals("")){
				Double score = row.getCell(14).getNumericCellValue();
				sr.setScore(score.floatValue());
			}
			//设置创建日期
			sr.setCreatedate(Calendar.getInstance().getTime());
			
			//设置注释
			row.getCell(9).setCellType(Cell.CELL_TYPE_STRING);
			String remark = row.getCell(9).getStringCellValue();
			ScorerecordRemark srRemark = new ScorerecordRemark();
			srRemark.setRemark(remark);
			sr.setRemark(srRemark);
			
			//设置创建者
			sr.setCreator(user);
			records.add(sr);
		}
		scoreBean.saveMassScoresFromList(records,user,hrBean);
	}
	
}
